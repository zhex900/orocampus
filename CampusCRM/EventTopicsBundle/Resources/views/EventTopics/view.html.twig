{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% set hasGrantedNameView = resource_granted('VIEW', entity, 'name') %}

{% oro_title_set({params : {"%eventtopics.name%": hasGrantedNameView
? entity.name|default('N/A')
: 'view %fieldName% not granted'|trans({'%fieldName%': 'oro.eventtopics.name.label'|trans}) }}) %}

{% block navButtons %}
    {% if resource_granted('EDIT', entity) %}
        {{ UI.editButton({
            'path': path('oro_eventtopics_update', {'id': entity.id}),
            'entity_label': 'oro.eventtopics.entity_label'|trans
        }) }}
    {% endif %}
    {% if resource_granted('DELETE', entity) %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_delete_eventtopics', {'id': entity.id}),
            'dataRedirect': path('oro_eventtopics_index'),
            'aCss': 'no-hash remove-button',
            'dataId': entity.id,
            'id': 'btn-remove-eventtopics',
            'dataMessage': 'oro.ui.delete_confirm_cascade'|trans({
                '%entity_label%' : 'oro.eventtopics.entity_label'|trans
            }),
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
    'entity': entity,
    'indexPath': path('oro_eventtopics_index'),
    'indexLabel': 'oro.eventtopics.entity_plural_label'|trans,
    'rawEntityTitle': not hasGrantedNameView,
    'entityTitle': hasGrantedNameView
    ? entity.name|default('N/A')
    : UI.renderDisabledLabel('view %fieldName% not granted'|trans({'%fieldName%': 'oro.eventtopics.name.label'|trans}))
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set eventtopicsInformationWidget %}
        {{ oro_widget_render({
            'widgetType': 'block',
            'title': 'oro.eventtopics.widgets.eventtopics_information'|trans,
            'url': path('oro_eventtopics_widget_info', {id: entity.id})
        }) }}
    {% endset %}

    {% set dataBlocks = [
        {
            'title': 'oro.eventtopics.sections.general'|trans,
            'class': 'active',
            'subblocks': [
                {'data' : [ eventtopicsInformationWidget ]}
            ]
        }
    ] %}

    {% set gridName = 'related-contacts-grid' %}
    {% set dataBlocks = dataBlocks|merge([{
    'title' : 'Contacts',
    'subblocks':
    [
    {
    'title' : null,
    'useSpan': false,
    'data' : [
    dataGrid.renderGrid(gridName, {viewEventnameId: entity.id}, { cssClass: 'inner-grid' })
    ]
    }
    ]
    }]) %}

    {% set id = 'eventtopicsView' %}
    {% set data = {'dataBlocks': dataBlocks} %}
    {{ parent() }}

{% endblock content_data %}
