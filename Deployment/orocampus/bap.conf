server {
    listen       80  default_server;
    port_in_redirect off;
    server_name $host;
    root /var/www/web;

    include /etc/nginx/snippets/letsencrypt.conf;

    if ( -f /srv/orocrm.maintance ) {
        return 503 'Sorry, we are on maintenance, please try again after several seconds.';
    }

    index app.php;
    # redirect to https only when it is not load balance
    # load balance will use http
    if ($remote_addr != 45.76.118.143) {
        return 301 https://$host$request_uri;
    }
    try_files $uri $uri/ @rewrite;
    location @rewrite {
        rewrite ^/(.*)$ /app.php/$1;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny  all;
    }

    # Set static files cache lifetime
    location ~* ^[^(\.php)]+\.(jpg|jpeg|gif|png|ico|css|pdf|ppt|txt|bmp|rtf|js)$ {
        access_log off; # disable logs
        expires 1h; # cahe 1h
        add_header Cache-Control public;
    }

    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_index app.php;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  SYMFONY_ENV      prod;
        fastcgi_intercept_errors        on;
        fastcgi_ignore_client_abort     off;
        fastcgi_connect_timeout         30;
        fastcgi_send_timeout            3600;
        fastcgi_read_timeout            3600;
        fastcgi_buffer_size             128k;
        fastcgi_buffers                 4   256k;
        fastcgi_busy_buffers_size       256k;
        fastcgi_temp_file_write_size    256k;
    }
}
server {
	server_name $host;
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server ipv6only=on;
    # HOST_URL is the host url e.g. app1.orocampus.tk
	ssl_certificate /etc/letsencrypt/live/HOST_URL/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/HOST_URL/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/HOST_URL/fullchain.pem;
	include /etc/nginx/snippets/ssl.conf;
s
	root /var/www/web;
	index app.php;
    try_files $uri $uri/ @rewrite;
    location @rewrite {
        rewrite ^/(.*)$ /app.php/$1;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny  all;
    }

    # Set static files cache lifetime
    location ~* ^[^(\.php)]+\.(jpg|jpeg|gif|png|ico|css|pdf|ppt|txt|bmp|rtf|js)$ {
        access_log off; # disable logs
        expires 1h; # cahe 1h
        add_header Cache-Control public;
    }
location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_index app.php;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  SYMFONY_ENV      prod;
        fastcgi_intercept_errors        on;
        fastcgi_ignore_client_abort     off;
        fastcgi_connect_timeout         30;
        fastcgi_send_timeout            3600;
        fastcgi_read_timeout            3600;
        fastcgi_buffer_size             128k;
        fastcgi_buffers                 4   256k;
        fastcgi_busy_buffers_size       256k;
        fastcgi_temp_file_write_size    256k;
    }

}