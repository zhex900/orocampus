{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% form_theme form with ['OroContactBundle:Include:fields.html.twig', 'OroFormBundle:Form:fields.html.twig'] %}
{% set fullname = entity|oro_format_name|default('oro.entity.item'|trans({'%id%': entity.id})) %}
{% oro_title_set({ params : {"%contact.name%": fullname} }) %}

{% set gridName = 'contact-accounts-grid' %}
{% set formAction = form.vars.value.id ? path('oro_contact_update', { 'id': form.vars.value.id }) : path('oro_contact_create') %}

{% block navButtons %}
    {% if form.vars.value.id and resource_granted('DELETE', form.vars.value) %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_delete_contact', {'id': form.vars.value.id}),
            'dataRedirect': path('oro_contact_index'),
            'aCss': 'no-hash remove-button',
            'id': 'btn-remove-contact',
            'dataId': form.vars.value.id,
            'entity_label': 'oro.contact.entity_label'|trans,
        }) }}
        {{ UI.buttonSeparator() }}
    {% endif %}
    {{ UI.cancelButton(path('oro_contact_index')) }}
    {% set html = UI.saveAndCloseButton({
    'route': 'oro_contact_view',
    'params': {'id': '$id'}
    }) %}
    {% if resource_granted('oro_contact_create') %}
        {% set html = html ~ UI.saveAndNewButton({
        'route': 'oro_contact_create'
        }) %}
    {% endif %}
    {% if form.vars.value.id or resource_granted('oro_contact_update') %}
        {% set html = html ~ UI.saveAndStayButton({
        'route': 'oro_contact_update',
        'params': {'id': '$id'}
        }) %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock %}

{% block pageHeader %}
    {% if form.vars.value.id %}
        {% set breadcrumbs = {
        'entity':      form.vars.value,
        'indexPath':   path('oro_contact_index'),
        'indexLabel': 'oro.contact.entity_plural_label'|trans,
        'entityTitle': fullname
        } %}
        {% set avatar = oro_configured_image_url(form.vars.value, 'picture') %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.contact.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block stats %}
    {% include 'OroContactBundle:Contact:headerStats.html.twig' with {'entity': entity} %}
{% endblock stats %}

{% block content_data %}
    {% set id = 'contact-profile' %}

    {% set dataBlocks = [{
    'title': 'General'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'General Information'|trans,
    'data': [
    form_row(form.firstName),
    form_row(form.lastName),
    form_row(form.gender),
    form_row(form.emails),
    form_row(form.phones),
    form_row(form.picture)
    ]
    },
    {
    'title': 'oro.contact.addresses.label'|trans,
    'data': [
    form_widget(form.addresses),
    ]
    }
    ]
    }] %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Personal'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'Personal Information'|trans,
    'data': [
    form_row(form.country_of_birth),
    form_row(form.ethnicity),
    form_row(form.marital_status),
    form_row(form.birthday),
    form_row(form.year_of_birth),
    form_row(form.int_student),
    form_row(form.out_of_town)
    ]
    }
    ]
    }]) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Academic'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'Academic Information'|trans,
    'data': [
    form_row(form.student_id),
    form_row(form.institutions),
    form_row(form.degrees),
    form_row(form.level_of_study),
    form_row(form.duration),
    form_row(form.year_of_commencement),
    form_row(form.month_of_commencement)
    ]
    }
    ]
    }]) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Spiritual'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'Spiritual Information'|trans,
    'data': [
    form_row(form.date_of_baptism),
    form_row(form.christian),
    form_row(form.believed_thr_us),
    form_row(form.baptised_by_us),
    form_row(form.date_believed)
    ]
    }
    ]
    }]) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Campus Work'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'Campus Work Information'|trans,
    'data': [
    form_row(form.source),
    form_row(form.contact_source),
    form_row(form.contact_status),
    form_row(form.assignedTo),
    form_row(form.owner),
    form_row(form.first_contact_date)

    ]
    }
    ]
    }]) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Social'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'Social Information'|trans,
    'data': [
    form_row(form.skype),
    form_row(form.method),
    form_row(form.twitter),
    form_row(form.facebook),
    form_row(form.googlePlus),
    form_row(form.linkedIn),
    form_row(form.picture)
    ]
    }
    ]
    }]) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Feedback'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'Feedback Information'|trans,
    'data': [
    form_row(form.further_activities),
    form_row(form.bible_study),
    form_row(form.homes),
    form_row(form.sunday_worship),
    form_row(form.mhl),
    form_row(form.christian_courses)
    ]
    }
    ]
    }]) %}

    {% if form.groups is defined and form.groups.children|length > 0 %}
        {% set dataBlocks = dataBlocks|merge([{
        'title' : 'oro.contact.groups.label'|trans,
        'subblocks':
        [
        {
        'title' : '',
        'useSpan': false,
        'data' : [
        form_row(form.groups, { attr: { class: 'horizontal' } })
        ]
        }
        ]
        }]) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
    'title' : 'oro.contact.accounts.label'|trans,
    'subblocks':
    [
    {
    'title' : null,
    'useSpan': false,
    'data' : [
    form_widget(form.appendAccounts, {'id': 'appendAccounts'}),
    form_widget(form.removeAccounts, {'id': 'removeAccounts'}),
    dataGrid.renderGrid(gridName, { contact: form.vars.value.id ? : null }, { cssClass: 'inner-grid' })
    ]
    }
    ]
    }]) %}

    {% set data = {
    'formErrors': form_errors(form)? form_errors(form) : null,
    'dataBlocks': dataBlocks,
    } %}
    {{ parent() }}
{% endblock content_data %}
